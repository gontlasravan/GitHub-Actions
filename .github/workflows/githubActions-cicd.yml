# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: github-actions-cicd-pepeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  compile:
    runs-on: self-hosted
    permissions:
      # This permission is required for the dependency submission action
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
  security-check:
    runs-on: self-hosted
    needs: compile
    permissions:
      # This permission is required for the dependency submission action
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Trivy Installation
      run: |
        sudo apt-get install wget gnupg
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy
    - name: Trivy FS Scan
      run:
        trivy fs --format table -o fs-report.json .
    - name: gitleaks installation
      run: 
        sudo apt install gitleaks -y
    - name: Gitleaks Code Scan
      run: gitleaks detect source . -r gitleaks-report.json -f json  
      
  test:
    runs-on: self-hosted
    needs: security-check
    permissions:
      # This permission is required for the dependency submission action
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit Test Cases
      run: mvn test
      
  build_project_and_sonar_scan:
     runs-on: self-hosted
     needs: test
     permissions:
      # This permission is required for the dependency submission action
      contents: write
     steps:
     - uses: actions/checkout@v4
     - name: Set up JDK 17
       uses: actions/setup-java@v4
       with:
         java-version: '17'
         distribution: 'temurin'
         cache: maven
     - name: Build Project
       run: mvn package
     - name: Upload Jar Artifact
       uses: actions/upload-artifact@v4
       with:
        name: app-jar
        path: target/*.jar

        
     - name: Checking out
       uses: actions/checkout@master
       with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
     - name: SonarQube Scan
       uses: kitabisa/sonarqube-action@v1.2.0
       with:
         host: ${{ vars.SONAR_HOST_URLT }}
         login: ${{ secrets.SONAR_TOKEN }} 
     - name: SonarQube Quality Gate check
       id: sonarqube-quality-gate-check
       uses: opsverseio/sonarqube-quality-gate-action@0.1.0
       timeout-minutes: 5
       env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        SET_SONAR_PROJECT_STATUS: true


  build_docker_image_and_push:
     runs-on: self-hosted
     needs: build_project_and_sonar_scan
     permissions:
      contents: write
     steps:
     - uses: actions/checkout@v4
     - name: Download JAR Artifact
       uses: actions/download-artifact@v4
       with:
         name: app-jar
         path: app
     - name: Login to Docker Hub
       uses: docker/login-action@v3
       with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Set up QEMU
       uses: docker/setup-qemu-action@v3
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3
     - name: Build and push
       uses: docker/build-push-action@v6
       with:
          push: true
          tags: user/app:latest
        
     
